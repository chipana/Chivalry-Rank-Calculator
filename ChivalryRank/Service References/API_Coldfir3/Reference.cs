//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ChivalryRank.API_Coldfir3 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PlayerStats", Namespace="http://schemas.datacontract.org/2004/07/ChivalryAPI")]
    [System.SerializableAttribute()]
    public partial class PlayerStats : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int deathsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string greatestVictimField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string greatestVictimIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int greatestVictimKillsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int killsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string nameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string nemesisField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string nemesisIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int nemesisKillsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string steamId64Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int teamKillsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ChivalryRank.API_Coldfir3.WeaponStats[] weaponsDeathsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ChivalryRank.API_Coldfir3.WeaponStats[] weaponsKillsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int deaths {
            get {
                return this.deathsField;
            }
            set {
                if ((this.deathsField.Equals(value) != true)) {
                    this.deathsField = value;
                    this.RaisePropertyChanged("deaths");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string greatestVictim {
            get {
                return this.greatestVictimField;
            }
            set {
                if ((object.ReferenceEquals(this.greatestVictimField, value) != true)) {
                    this.greatestVictimField = value;
                    this.RaisePropertyChanged("greatestVictim");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string greatestVictimID {
            get {
                return this.greatestVictimIDField;
            }
            set {
                if ((object.ReferenceEquals(this.greatestVictimIDField, value) != true)) {
                    this.greatestVictimIDField = value;
                    this.RaisePropertyChanged("greatestVictimID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int greatestVictimKills {
            get {
                return this.greatestVictimKillsField;
            }
            set {
                if ((this.greatestVictimKillsField.Equals(value) != true)) {
                    this.greatestVictimKillsField = value;
                    this.RaisePropertyChanged("greatestVictimKills");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int kills {
            get {
                return this.killsField;
            }
            set {
                if ((this.killsField.Equals(value) != true)) {
                    this.killsField = value;
                    this.RaisePropertyChanged("kills");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                if ((object.ReferenceEquals(this.nameField, value) != true)) {
                    this.nameField = value;
                    this.RaisePropertyChanged("name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string nemesis {
            get {
                return this.nemesisField;
            }
            set {
                if ((object.ReferenceEquals(this.nemesisField, value) != true)) {
                    this.nemesisField = value;
                    this.RaisePropertyChanged("nemesis");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string nemesisID {
            get {
                return this.nemesisIDField;
            }
            set {
                if ((object.ReferenceEquals(this.nemesisIDField, value) != true)) {
                    this.nemesisIDField = value;
                    this.RaisePropertyChanged("nemesisID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int nemesisKills {
            get {
                return this.nemesisKillsField;
            }
            set {
                if ((this.nemesisKillsField.Equals(value) != true)) {
                    this.nemesisKillsField = value;
                    this.RaisePropertyChanged("nemesisKills");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string steamId64 {
            get {
                return this.steamId64Field;
            }
            set {
                if ((object.ReferenceEquals(this.steamId64Field, value) != true)) {
                    this.steamId64Field = value;
                    this.RaisePropertyChanged("steamId64");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int teamKills {
            get {
                return this.teamKillsField;
            }
            set {
                if ((this.teamKillsField.Equals(value) != true)) {
                    this.teamKillsField = value;
                    this.RaisePropertyChanged("teamKills");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ChivalryRank.API_Coldfir3.WeaponStats[] weaponsDeaths {
            get {
                return this.weaponsDeathsField;
            }
            set {
                if ((object.ReferenceEquals(this.weaponsDeathsField, value) != true)) {
                    this.weaponsDeathsField = value;
                    this.RaisePropertyChanged("weaponsDeaths");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ChivalryRank.API_Coldfir3.WeaponStats[] weaponsKills {
            get {
                return this.weaponsKillsField;
            }
            set {
                if ((object.ReferenceEquals(this.weaponsKillsField, value) != true)) {
                    this.weaponsKillsField = value;
                    this.RaisePropertyChanged("weaponsKills");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="WeaponStats", Namespace="http://schemas.datacontract.org/2004/07/ChivalryAPI")]
    [System.SerializableAttribute()]
    public partial class WeaponStats : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int killsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string nameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int kills {
            get {
                return this.killsField;
            }
            set {
                if ((this.killsField.Equals(value) != true)) {
                    this.killsField = value;
                    this.RaisePropertyChanged("kills");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                if ((object.ReferenceEquals(this.nameField, value) != true)) {
                    this.nameField = value;
                    this.RaisePropertyChanged("name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="API_Coldfir3.IPlayerDataWS")]
    public interface IPlayerDataWS {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlayerDataWS/GetPlayerInfo", ReplyAction="http://tempuri.org/IPlayerDataWS/GetPlayerInfoResponse")]
        ChivalryRank.API_Coldfir3.PlayerStats GetPlayerInfo(string steamID64);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlayerDataWS/GetPlayerInfo", ReplyAction="http://tempuri.org/IPlayerDataWS/GetPlayerInfoResponse")]
        System.Threading.Tasks.Task<ChivalryRank.API_Coldfir3.PlayerStats> GetPlayerInfoAsync(string steamID64);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlayerDataWS/GetTotalTks", ReplyAction="http://tempuri.org/IPlayerDataWS/GetTotalTksResponse")]
        decimal GetTotalTks(string steamID64);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlayerDataWS/GetTotalTks", ReplyAction="http://tempuri.org/IPlayerDataWS/GetTotalTksResponse")]
        System.Threading.Tasks.Task<decimal> GetTotalTksAsync(string steamID64);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlayerDataWS/GetPlayerExp", ReplyAction="http://tempuri.org/IPlayerDataWS/GetPlayerExpResponse")]
        int GetPlayerExp(string steamID64);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPlayerDataWS/GetPlayerExp", ReplyAction="http://tempuri.org/IPlayerDataWS/GetPlayerExpResponse")]
        System.Threading.Tasks.Task<int> GetPlayerExpAsync(string steamID64);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IPlayerDataWSChannel : ChivalryRank.API_Coldfir3.IPlayerDataWS, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PlayerDataWSClient : System.ServiceModel.ClientBase<ChivalryRank.API_Coldfir3.IPlayerDataWS>, ChivalryRank.API_Coldfir3.IPlayerDataWS {
        
        public PlayerDataWSClient() {
        }
        
        public PlayerDataWSClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public PlayerDataWSClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PlayerDataWSClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PlayerDataWSClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public ChivalryRank.API_Coldfir3.PlayerStats GetPlayerInfo(string steamID64) {
            return base.Channel.GetPlayerInfo(steamID64);
        }
        
        public System.Threading.Tasks.Task<ChivalryRank.API_Coldfir3.PlayerStats> GetPlayerInfoAsync(string steamID64) {
            return base.Channel.GetPlayerInfoAsync(steamID64);
        }
        
        public decimal GetTotalTks(string steamID64) {
            return base.Channel.GetTotalTks(steamID64);
        }
        
        public System.Threading.Tasks.Task<decimal> GetTotalTksAsync(string steamID64) {
            return base.Channel.GetTotalTksAsync(steamID64);
        }
        
        public int GetPlayerExp(string steamID64) {
            return base.Channel.GetPlayerExp(steamID64);
        }
        
        public System.Threading.Tasks.Task<int> GetPlayerExpAsync(string steamID64) {
            return base.Channel.GetPlayerExpAsync(steamID64);
        }
    }
}
